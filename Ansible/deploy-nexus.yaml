---
- name : install java and net-tool
  hosts: nexus_server
  become: yes
  tasks:
    - name: update apt repo and cache 
      apt: 
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
    - name: Install Java 8 & net tools
      apt:
        pkg: # install list of packages
          - acl
          - openjdk-8-jre-headless
          - net-tools

- name: download and unpack nexus installer
  become: yes
  hosts: nexus_server
  tasks:
    - name: check nexus folder stats
      stat:
        path: /opt/nexus
      register: stat_result
    - debug: msg={{stat_result.stat.exists}}
    - name: download the nexus
      get_url: 
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/
      register: download_result
    - debug: msg={{download_result}}
    - name: Untar nexus installer
      unarchive: 
        src: "{{download_result.dest}}" # give full path of our archive and get from other module
        dest: /opt/
        remote_src: yes
      when: not stat_result.stat.exists 
    - name: find nexus folder
      find: 
        path: /opt #where to look for that
        pattern: "nexus-*" # regular expression 
        file_type: directory # file by default
      register: find_result
    - debug: msg={{find_result}} # it is one list
    - name: rename nexus folder
      shell: mv {{find_result.files[0].path}} /opt/nexus
      when: not stat_result.stat.exists 

- name: create nexus user to own nexus folders
  become: yes
  hosts: nexus_server
  tasks:
    - name: ensure nexus group exists # if not ansilbe will create
      group:
        name : nexus
        state: present
    - name: create nexus user
      user:
        name: nexus 
        group: nexus
    - name: make nexus user owner of nexus file
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
    - name: make nexus user owner of sonatype file
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        recurse: yes
- name: start nexus with nexus user
  become: True
  become_user : nexus
  become: yes
  hosts: nexus_server
  tasks:
    - name: set run_as_user nexus
      # blockinfile: # or use lineinfile to ensure line is in a file o replace an existing line using regex...just for single line 
      #   path: /opt/nexus/bin/nexus.rc
      #   block: | # block of content | representing multiline string
      #     run_as_user="nexus"
      lineinfile:
        path: /opt/nexus/bin/nexus.rc
        regexp: '^#run_as_user=""' # find the line...replacing this line with next one
        line: run_as_user="nexus"
    - name: start nexus
      command: /opt/nexus/bin/nexus start

- name: verify nexus running
  hosts: nexus_server
  tasks:
    - name: check with ps command
      shell: ps aux | grep nexus  
      register: app_status 
    - name: Showing the result
      debug: 
        msg: "{{app_status.stdout_lines}}"
    - name: wait one minute
      pause:
        minutes: 1
    - name: check with netstat
      shell: netstat -plnt 
      register: app_status 
    - name: Showing the result of net stat
      debug: 
        msg: "{{app_status.stdout_lines}}"
    